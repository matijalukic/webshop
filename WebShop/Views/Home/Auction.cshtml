@model WebShop.Models.Auction

@{
    ViewBag.Title = "Web Shop " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<div class="row">
    
    <div class="col-md-12 my-5 title-section">
        @Html.Partial("Notification")

        <h1>@Model.Name - Auction</h1>
    </div>

    <div class="col-md-6">
        <img src="@Model.Picture" class="auction-img img-fluid"/>
        <p class="text-muted">Started: @Model.CreatedAt</p>
        <p>
            <span class="price-text">Price: <span class="price">@ViewBag.Price</span> Tokens</span><br/>
            Buyout: @Model.Price Tokens<br/>
            State: <em>@Model.State</em>
        </p>
        @if (Model.IsOpen())
        {
            <p class="text-danger">Time left: <span class="time-left"></span></p>

        }
        <p class="text-muted">Posted by <strong>@Model.User.Name @Model.User.Surname</strong></p>
    </div>

    <div class="col-md-6">
        <h3>
            Bids
        </h3>
        @if (Session["LoggedUser"] != null)
        {
            if (Model.IsOpen())
            {
                using (Html.BeginForm("Bid", "Auctions", FormMethod.Get, new { @class = "form-inline justify-content-between bg-light p-2 rounded-3 my-3", @id = "makebidform" }))
                {
                    @Html.Hidden("AuctionId", Model.Id, new { @id = "auctionId"})
                    <h5>Make bid:</h5>

                    @Html.TextBox("Amount", "", new { @class = "form-control", @placeholder = "Amount of tokens to bid", @type = "number", @min = "1", @id = "tokensamount" })

                    <button type="submit" id="makebid" class="btn btn-primary">Make bid</button>
                }
            }
        }
        else
        {
            <div class="alert alert-warning">You must be logged in to post bids!</div>
        }

        <table id="bids" class="table table-striped table-borderless">
            <thead>
                <tr>
                    <th>
                        Amount
                    </th>
                    <th>
                        User
                    </th>
                    <th>
                        Bid made
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (WebShop.Models.Bid Bid in ViewBag.Bids)
                {
                    <tr>
                        <td>
                            @Bid.Amount
                        </td>
                        <td>
                            @Bid.User.Name @Bid.User.Surname (@Bid.User.Email)
                        </td>
                        <td>
                            @Bid.CreatedAt
                        </td>
                    </tr>
                }
            </tbody>
        </table> 

    </div>

</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var secondsLeft;         
        var intervalUpdate;

        function updateTimeLeft() {
                var auctionsEnds = new Date("@(Model.ClosedAt)");

                var differenceTimeSeconds = (auctionsEnds - new Date()) / 1000;
                if (differenceTimeSeconds > 0) {
                    var hours = Math.floor(differenceTimeSeconds / 3600);
                    var minutes = Math.floor(differenceTimeSeconds / 60) % 60;
                    var seconds = Math.floor(differenceTimeSeconds % 60);

                    // Add leading zeros
                    minutes = (minutes < 10 ? "0" : "") + minutes;
                    seconds = (seconds < 10 ? "0" : "") + seconds;
                    hours = (hours < 10 ? "0" : "") + hours;

                    // Compose the string for display
                    var currentTimeString = hours + ":" + minutes + ":" + seconds;


                    $(".time-left").html(currentTimeString);
                }
                

                return differenceTimeSeconds;
        }

        $(function () {
            secondsLeft = updateTimeLeft();

            intervalUpdate = setInterval(updateTimeLeft, 1000);

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.AuctionHub;


            chat.client.ReceiveBid = function (Amount, User, BidSent) {
                $("#bids tbody").prepend("<tr class='bg-warning'><td>" + Amount + "</td><td>" + User.Name + " " + User.Surname + "(" + User.Email + ")</td><td>" + BidSent + "</td></tr>");

                setTimeout(function () {
                    $("#bids tbody tr").removeClass("bg-warning");
                }, 3000);
            };

            chat.client.ReceiveError = function (error) {
                $(".title-section").prepend("<div class='alert alert-warning notification text-center'>" + error + "</div>");
                var notification = $(".notification");
                notification.hide().slideDown();


                notification.delay(3000).slideUp()
            };

            chat.client.NewPrice = function (newAmount) {
                var priceTag = $("span.price");
                var priceText = $(".price-text");
                priceTag.html(newAmount);

                priceText.addClass("bg-warning");
                setTimeout(function () {
                    priceText.removeClass("bg-warning");
                }, 3000);
            }

            chat.client.UpdateBalance = function (newAmount) {
                console.log(newAmount);
                $("#user-balance").text(newAmount);
            }

        });
        </script>

    @if (Session["LoggedUser"] != null)
    {
    <script>        
            $(function () {

                // Start the connection.
                $.connection.hub.start().done(function() {

                        $('#makebidform').submit(function(e) {
                            e.preventDefault();
                            var chat = $.connection.AuctionHub;
                            // Call the Send method on the hub.
                            chat.server.SendBid($('#tokensamount').val(), $("#auctionId").val(), @((Session["LoggedUser"] as WebShop.Models.User).Id));
                                    // Clear text box and reset focus for next comment.
                        });

                });


            });

    </script>
    }


}